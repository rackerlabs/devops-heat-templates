heat_template_version: 2013-05-23

description: |
  This heat template will deploy Redis master-slave servers

parameter_groups:

- label: Server Settings
  parameters:
  - redis_flavor

- label: Chef Parameters
  parameters:
  - chef_server_url
  - organization
  - run_list
  - validation_key

parameters:
  prefix:
    label: Hostname Prefix
    description: The prefix to use for all server hostnames
    type: string
    default: redis
    constraints:
    - length:
        min: 1
        max: 15
    - allowed_pattern: "^[a-zA-Z][a-zA-Z0-9-]*$"

  redis_flavor:
    label: Redis Server Flavor
    type: string
    default: 1 GB General Purpose v1
    constraints:
    - allowed_values:
      - general1-1
      - general1-2
      - general1-4
      - general1-8
      - 1 GB General Purpose v1
      - 2 GB General Purpose v1
      - 4 GB General Purpose v1
      - 8 GB General Purpose v1
      - io1-15
      - io1-30
      - io1-60
      - io1-90
      - io1-120
      - 15 GB I/O v1
      - 30 GB I/O v1
      - 60 GB I/O v1
      - 90 GB I/O v1
      - 120 GB I/O v1
    description: |
      Must be a valid Rackspace Cloud Server flavor for the region you have
      selected to deploy into.

  redis_image:
    label: Server Base Image
    type: string
    default: Ubuntu 14.04 LTS (Trusty Tahr) (PVHVM)
    constraints:
    - allowed_values:
      - CentOS 6.5 (PVHVM)
      - Ubuntu 14.04 LTS (Trusty Tahr) (PVHVM)
      - Ubuntu 14.04 LTS (Trusty Tahr)
    description: Server image to use for Redis servers

  chef_server_url:
    label: Chef Server URL
    description: |
       Optional: Chef Server URL. Defaults to None, but the BASH script will
       infer the Managed Chef URL from the organization
    type: string
    default: ''

  organization:
    label: Organization
    description: |
      Required: Chef organization
    type: string
    default:

  run_list:
    label: Run List
    description: |
      Optional: Chef Run List. Will default to an empty string resulting in an empty run_list
    type: string
    default: ''

  validation_key:
    label: Validation Key
    description: |
      Required: chef-client will attempt to use the private key assigned to the
      chef-validator, located in /etc/chef/validation.pem. If, for any reason,
      the chef-validator is unable to make an authenticated request to the
      Chef server, the initial chef-client run will fail.
    type: string
    default:

resources:
  redis_master:
    type: OS::Heat::ResourceGroup
    properties:
      count: 1
      resource_def:
        type: Rackspace::Cloud::Server
        properties:
          name:
            redis_master
          flavor: { get_param: redis_flavor }
          image: { get_param: redis_image }
          config_drive: true
          networks:
          - uuid: "00000000-0000-0000-0000-000000000000"
          - uuid: "11111111-1111-1111-1111-111111111111"
          #- network: { get_resource: private_net }
          metadata:
            group: redis-build
            rax-heat: { get_param: "OS::stack_id" }
          user_data:
            str_replace:
              template: { get_file: ../templates/chef_bootstrap.tpl }
              params:
                "%chef_server_url%": { get_param: chef_server_url}
                "%organization%": { get_param: organization}
                "%run_list%": { get_param: run_list}
                "%validation_key%": { get_param: validation_key }
  redis_slave:
    type: OS::Heat::ResourceGroup
    properties:
      count: 1
      resource_def:
        type: Rackspace::Cloud::Server
        properties:
          name:
            redis_slave
          flavor: { get_param: redis_flavor }
          image: { get_param: redis_image }
          config_drive: true
          networks:
          - uuid: "00000000-0000-0000-0000-000000000000"
          - uuid: "11111111-1111-1111-1111-111111111111"
          #- network: { get_resource: private_net }
          metadata:
            group: redis-build
            rax-heat: { get_param: "OS::stack_id" }
          user_data:
            str_replace:
              template: { get_file: ../templates/chef_bootstrap.tpl }
              params:
                "%chef_server_url%": { get_param: chef_server_url}
                "%organization%": { get_param: organization}
                "%run_list%": { get_param: run_list}
                "%validation_key%": { get_param: validation_key }
#  outputs:
#    instance_ip:
#      description: IP address of the deployed compute instance
#      value: { get_attr: [my_instance, first_address] }
#    instance_private_ip:
#      description: Private IP address of the deployed compute instance
#      value: { get_attr: [my_instance, networks, private, 0] }
