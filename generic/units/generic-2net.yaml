# vim: set sts=2 sw=2 ts=2 expandtab:
heat_template_version: 2013-05-23

description: |
  This heat template will a server with 2 networks

parameters:
  server_name:
    label: Server hostname
    description: Server hostname to use
    type: string
    default: node
    constraints:
    - allowed_pattern: "^[a-zA-Z][a-zA-Z0-9-]*$"

  server_flavor:
    label: Server Flavor
    type: string
    default: 1 GB General Purpose v1
    constraints:
    - allowed_values:
      - general1-1
      - general1-2
      - general1-4
      - general1-8
      - 1 GB General Purpose v1
      - 2 GB General Purpose v1
      - 4 GB General Purpose v1
      - 8 GB General Purpose v1
      - io1-15
      - io1-30
      - io1-60
      - io1-90
      - io1-120
      - 15 GB I/O v1
      - 30 GB I/O v1
      - 60 GB I/O v1
      - 90 GB I/O v1
      - 120 GB I/O v1
    description: |
      Must be a valid Rackspace Cloud Server flavor for the region you have
      selected to deploy into.

  server_image:
    label: Server Base Image
    type: string
    default: CentOS 6 (PVHVM)
    constraints:
    - allowed_values:
      - CentOS 6 (PVHVM)
      - Debian 7 (Wheezy) (PVHVM)
      - Ubuntu 14.04 LTS (Trusty Tahr) (PVHVM)
    description: Server image to use for servers

  connected_network:
    label: Primary Network ID
    description: The network ID to connect the servers to, defaults to public net
    type: string
    default: "00000000-0000-0000-0000-000000000000"

  ssh_key:
    label: SSH Key Name
    description: SSH Key name to use for the instance, must already exist in the target openstack region
    type: string
    default:

resources:
  server:
    type: OS::Nova::Server
    properties:
      flavor: { get_param: server_flavor }
      image: { get_param: server_image }
      config_drive: true
      name: { get_param: server_name }
      key_name: { get_param: ssh_key }
      networks:
      - uuid: { get_param: connected_network }
      - uuid: "11111111-1111-1111-1111-111111111111"
      metadata:
        rax-heat: { get_param: "OS::stack_id" }
